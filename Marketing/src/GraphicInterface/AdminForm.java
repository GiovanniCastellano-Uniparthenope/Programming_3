package GraphicInterface;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.data.xy.*;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;

import java.awt.*;
import javax.swing.*;

import Code.KMeans.*;
import Code.*;
import Code.TFIDF.*;




/**
 * @author Giovanni
 */
public class AdminForm extends javax.swing.JFrame {

    private Admin user;
    ArrayList<Product> products;
    ArrayList<User> users;
    
    public AdminForm(User us) {
        setPreferredSize(new Dimension(800, 800));
        this.user=(Admin)us;
        initComponents();
        if(!("admin".equals(this.user.getUserLoginName())))
        {
            UsernameTextField.setEditable(false);
            PasswordTextField.setEditable(false);
            ConfirmPasswordTextField.setEditable(false);
            UsernameTextField.setEnabled(false);
            PasswordTextField.setEnabled(false);
            ConfirmPasswordTextField.setEnabled(false);
            ConfirmNewUserButton.setEnabled(false);
            OutputMessageLabel.setForeground(Color.red);
            OutputMessageLabel.setText("Only the Admin can create new admins");
        }
        else
        {
            DeleteUserButton.setEnabled(false);
        }
        products = FileManager.readProductFile();
        users = FileManager.readUserFile();
        this.updateAdminListPanel1();
        for(User user:this.users)
        {
            if(user instanceof Guest)
            {
                TFIDFComboBox.addItem(user.getUserLoginName());
            }
        }
        TFIDFComboBox.setSelectedIndex(-1);
    }
    
    {
        products = new ArrayList<>();
        users = new ArrayList<>();
    }
    
    private void updateAdminListPanel1()
    {
        DefaultListModel<String> list = new DefaultListModel<>();
        String stringa;
        for(Product product:this.products)
        {
            stringa = "";
            stringa = stringa.concat(product.getID() + " - " +product.getName() + " - " + product.getStock() + " - " + String.format("%.02f", product.getCost()) + "€" + " - " + product.getCategory());
            list.addElement(stringa);
        }
        AdminListPanel1.setModel(list);
        AdminListPanel1.setSelectedIndex(0);
        if(this.products.isEmpty())
            AdminTextAreaPanel1.setText("");
        else
            AdminTextAreaPanel1.setText(this.products.get(0).getDescription());
    }
    
    private void updateProductAnalyzeUserList()
    {
        DefaultListModel<String> list = new DefaultListModel<>();
        String stringa;
        for(Product product:this.products)
        {
            stringa = "";
            stringa = stringa.concat(product.getID() + " - " +product.getName() + " - " + product.getStock() + " - " + String.format("%.02f", product.getCost()) + "€" + " - " + product.getCategory());
            list.addElement(stringa);
        }
        ProductAnalyzeUserList.setModel(list);
        ProductAnalyzeUserList.setSelectedIndex(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdminPanel = new javax.swing.JTabbedPane();
        AddProductPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AdminListPanel1 = new javax.swing.JList<>();
        AdminRemoveSelectedButtonPanel1 = new javax.swing.JButton();
        ChangeCountLabelAdminPanel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        CountTextBoxAdminPanel1 = new javax.swing.JTextField();
        IncreaseButtonAdminPanel1 = new javax.swing.JButton();
        DecreaseButtonAdminPanel1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        AddItemLabelAdminPanel1 = new javax.swing.JLabel();
        NewItemAdminPanel1Field1 = new javax.swing.JTextField();
        NewItemAdminPanel1Field2 = new javax.swing.JTextField();
        NewItemAdminPanel1Field3 = new javax.swing.JTextField();
        NewItemAdminPanel1Field4 = new javax.swing.JTextField();
        NewItemAdminPanel1Field5 = new javax.swing.JTextField();
        IDLabelAdminPanel1 = new javax.swing.JLabel();
        NameLabelAdminPanel1 = new javax.swing.JLabel();
        DescriptionLabelAdminPanel1 = new javax.swing.JLabel();
        CountLabelAdminPanel1 = new javax.swing.JLabel();
        CostLabelAdminPanel1 = new javax.swing.JLabel();
        CostLabelAdminPanel2 = new javax.swing.JLabel();
        ConfirmButtonAdminPanel1 = new javax.swing.JButton();
        AddItemLabelAdminPanel2 = new javax.swing.JLabel();
        AdminSAVECHANGESButtonPanel2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AdminTextAreaPanel1 = new javax.swing.JTextArea();
        AdminCategoryComboBoxPanel1 = new javax.swing.JComboBox<>();
        AdminCheckBoxPanel1 = new javax.swing.JCheckBox();
        KMeansPanel = new javax.swing.JPanel();
        KMeansGraphPanel = new javax.swing.JPanel();
        TFIDFPanel = new javax.swing.JPanel();
        TFIDFGraphPanel = new javax.swing.JPanel();
        TFIDFUpdateButton = new javax.swing.JButton();
        TFIDFComboBox = new javax.swing.JComboBox<>();
        CreateOfferLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ProductAnalyzeUserList = new javax.swing.JList<>();
        ConfirmButton = new javax.swing.JButton();
        NewPriceLabel = new javax.swing.JLabel();
        NewPriceTextField = new javax.swing.JTextField();
        NewPriceLabel1 = new javax.swing.JLabel();
        QuantityTextField = new javax.swing.JTextField();
        OptionPanel = new javax.swing.JPanel();
        UsernameTextField = new javax.swing.JTextField();
        ConfirmPasswordTextField = new javax.swing.JTextField();
        ConfirmNewUserButton = new javax.swing.JButton();
        PasswordTextField = new javax.swing.JTextField();
        OutputMessageLabel = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        ConfirmPasswordLabel = new javax.swing.JLabel();
        DeleteUserButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(810, 620));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        AdminPanel.setBackground(new java.awt.Color(255, 255, 255));
        AdminPanel.setToolTipText("");
        AdminPanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        AdminPanel.setPreferredSize(new java.awt.Dimension(791, 560));
        AdminPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdminPanelMouseClicked(evt);
            }
        });

        AddProductPanel.setBackground(new java.awt.Color(153, 255, 255));
        AddProductPanel.setAutoscrolls(true);
        AddProductPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AddProductPanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        AddProductPanel.setInheritsPopupMenu(true);
        AddProductPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AddProductPanelFocusGained(evt);
            }
        });

        AdminListPanel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        AdminListPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdminListPanel1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AdminListPanel1);

        AdminRemoveSelectedButtonPanel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        AdminRemoveSelectedButtonPanel1.setText("Remove selected items");
        AdminRemoveSelectedButtonPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminRemoveSelectedButtonPanel1ActionPerformed(evt);
            }
        });

        ChangeCountLabelAdminPanel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ChangeCountLabelAdminPanel1.setText("Change selected item/s count by:");
        ChangeCountLabelAdminPanel1.setToolTipText("");

        CountTextBoxAdminPanel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        CountTextBoxAdminPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountTextBoxAdminPanel1ActionPerformed(evt);
            }
        });

        IncreaseButtonAdminPanel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        IncreaseButtonAdminPanel1.setText("Increase");
        IncreaseButtonAdminPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncreaseButtonAdminPanel1ActionPerformed(evt);
            }
        });

        DecreaseButtonAdminPanel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        DecreaseButtonAdminPanel1.setText("Decrease");
        DecreaseButtonAdminPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecreaseButtonAdminPanel1ActionPerformed(evt);
            }
        });

        AddItemLabelAdminPanel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AddItemLabelAdminPanel1.setText("Add a new item");
        AddItemLabelAdminPanel1.setToolTipText("");

        NewItemAdminPanel1Field1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        NewItemAdminPanel1Field2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        NewItemAdminPanel1Field3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        NewItemAdminPanel1Field4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        NewItemAdminPanel1Field5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        IDLabelAdminPanel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        IDLabelAdminPanel1.setText("ID:");
        IDLabelAdminPanel1.setToolTipText("");

        NameLabelAdminPanel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        NameLabelAdminPanel1.setText("Name:");
        NameLabelAdminPanel1.setToolTipText("");

        DescriptionLabelAdminPanel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DescriptionLabelAdminPanel1.setText("Description:");
        DescriptionLabelAdminPanel1.setToolTipText("");

        CountLabelAdminPanel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CountLabelAdminPanel1.setText("Count:");
        CountLabelAdminPanel1.setToolTipText("");

        CostLabelAdminPanel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CostLabelAdminPanel1.setText("Cost:");
        CostLabelAdminPanel1.setToolTipText("");

        CostLabelAdminPanel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CostLabelAdminPanel2.setText("Category:");
        CostLabelAdminPanel2.setToolTipText("");

        ConfirmButtonAdminPanel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ConfirmButtonAdminPanel1.setText("Add");
        ConfirmButtonAdminPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonAdminPanel1ActionPerformed(evt);
            }
        });

        AddItemLabelAdminPanel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AddItemLabelAdminPanel2.setText("ID - Name - Count - Cost - Category");
        AddItemLabelAdminPanel2.setToolTipText("");

        AdminSAVECHANGESButtonPanel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        AdminSAVECHANGESButtonPanel2.setForeground(new java.awt.Color(255, 0, 0));
        AdminSAVECHANGESButtonPanel2.setText("SAVE CHANGES");
        AdminSAVECHANGESButtonPanel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminSAVECHANGESButtonPanel2ActionPerformed(evt);
            }
        });

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        AdminTextAreaPanel1.setEditable(false);
        AdminTextAreaPanel1.setColumns(20);
        AdminTextAreaPanel1.setRows(5);
        jScrollPane2.setViewportView(AdminTextAreaPanel1);

        AdminCategoryComboBoxPanel1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casa", "Giardinaggio", "Salute", "Hardware", "Software", "Cucina", "Bambini", "Ufficio" }));
        AdminCategoryComboBoxPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminCategoryComboBoxPanel1ActionPerformed(evt);
            }
        });

        AdminCheckBoxPanel1.setBackground(new java.awt.Color(153, 255, 255));
        AdminCheckBoxPanel1.setText("Modify selected");
        AdminCheckBoxPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminCheckBoxPanel1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddProductPanelLayout = new javax.swing.GroupLayout(AddProductPanel);
        AddProductPanel.setLayout(AddProductPanelLayout);
        AddProductPanelLayout.setHorizontalGroup(
            AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProductPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                        .addComponent(AddItemLabelAdminPanel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddItemLabelAdminPanel1)
                        .addGap(94, 94, 94))
                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConfirmButtonAdminPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addComponent(AdminSAVECHANGESButtonPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addGroup(AddProductPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                                        .addComponent(DescriptionLabelAdminPanel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(NewItemAdminPanel1Field3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                                        .addComponent(NameLabelAdminPanel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(NewItemAdminPanel1Field2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                                        .addComponent(IDLabelAdminPanel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AdminCheckBoxPanel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(NewItemAdminPanel1Field1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddProductPanelLayout.createSequentialGroup()
                                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CostLabelAdminPanel1)
                                            .addComponent(CostLabelAdminPanel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(NewItemAdminPanel1Field5, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                            .addComponent(AdminCategoryComboBoxPanel1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                                        .addComponent(CountLabelAdminPanel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(NewItemAdminPanel1Field4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(AddProductPanelLayout.createSequentialGroup()
                                .addComponent(ChangeCountLabelAdminPanel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CountTextBoxAdminPanel1))
                            .addGroup(AddProductPanelLayout.createSequentialGroup()
                                .addComponent(IncreaseButtonAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DecreaseButtonAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(AdminRemoveSelectedButtonPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        AddProductPanelLayout.setVerticalGroup(
            AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddItemLabelAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddItemLabelAdminPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewItemAdminPanel1Field1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDLabelAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AdminCheckBoxPanel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewItemAdminPanel1Field2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameLabelAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewItemAdminPanel1Field3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DescriptionLabelAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewItemAdminPanel1Field4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CountLabelAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewItemAdminPanel1Field5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CostLabelAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CostLabelAdminPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AdminCategoryComboBoxPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(ConfirmButtonAdminPanel1)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ChangeCountLabelAdminPanel1)
                            .addComponent(CountTextBoxAdminPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IncreaseButtonAdminPanel1)
                            .addComponent(DecreaseButtonAdminPanel1))
                        .addGap(28, 28, 28)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddProductPanelLayout.createSequentialGroup()
                        .addComponent(AdminRemoveSelectedButtonPanel1)
                        .addGap(18, 18, 18)
                        .addComponent(AdminSAVECHANGESButtonPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        AdminPanel.addTab("Manage market", AddProductPanel);

        KMeansPanel.setBackground(new java.awt.Color(255, 75, 75));
        KMeansPanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        KMeansPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                KMeansPanelFocusGained(evt);
            }
        });

        javax.swing.GroupLayout KMeansGraphPanelLayout = new javax.swing.GroupLayout(KMeansGraphPanel);
        KMeansGraphPanel.setLayout(KMeansGraphPanelLayout);
        KMeansGraphPanelLayout.setHorizontalGroup(
            KMeansGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 774, Short.MAX_VALUE)
        );
        KMeansGraphPanelLayout.setVerticalGroup(
            KMeansGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 486, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout KMeansPanelLayout = new javax.swing.GroupLayout(KMeansPanel);
        KMeansPanel.setLayout(KMeansPanelLayout);
        KMeansPanelLayout.setHorizontalGroup(
            KMeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KMeansPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KMeansGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        KMeansPanelLayout.setVerticalGroup(
            KMeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KMeansPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KMeansGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        AdminPanel.addTab("Users trend", KMeansPanel);

        TFIDFPanel.setBackground(new java.awt.Color(255, 255, 155));
        TFIDFPanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TFIDFPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TFIDFPanelFocusGained(evt);
            }
        });
        TFIDFPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TFIDFPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout TFIDFGraphPanelLayout = new javax.swing.GroupLayout(TFIDFGraphPanel);
        TFIDFGraphPanel.setLayout(TFIDFGraphPanelLayout);
        TFIDFGraphPanelLayout.setHorizontalGroup(
            TFIDFGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );
        TFIDFGraphPanelLayout.setVerticalGroup(
            TFIDFGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 468, Short.MAX_VALUE)
        );

        TFIDFUpdateButton.setText("Refresh");
        TFIDFUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFIDFUpdateButtonActionPerformed(evt);
            }
        });

        CreateOfferLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CreateOfferLabel.setText("Create offer");

        ProductAnalyzeUserList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ProductAnalyzeUserList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductAnalyzeUserListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ProductAnalyzeUserList);

        ConfirmButton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ConfirmButton.setText("Confirm");
        ConfirmButton.setEnabled(false);
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });

        NewPriceLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NewPriceLabel.setText("New price:");

        NewPriceTextField.setEnabled(false);

        NewPriceLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NewPriceLabel1.setText("Quantity:");

        QuantityTextField.setEnabled(false);

        javax.swing.GroupLayout TFIDFPanelLayout = new javax.swing.GroupLayout(TFIDFPanel);
        TFIDFPanel.setLayout(TFIDFPanelLayout);
        TFIDFPanelLayout.setHorizontalGroup(
            TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TFIDFPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TFIDFPanelLayout.createSequentialGroup()
                        .addComponent(TFIDFComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TFIDFUpdateButton)
                        .addContainerGap())
                    .addGroup(TFIDFPanelLayout.createSequentialGroup()
                        .addComponent(TFIDFGraphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TFIDFPanelLayout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(CreateOfferLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(TFIDFPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                                    .addGroup(TFIDFPanelLayout.createSequentialGroup()
                                        .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(NewPriceLabel)
                                            .addComponent(NewPriceLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(QuantityTextField)
                                            .addGroup(TFIDFPanelLayout.createSequentialGroup()
                                                .addComponent(ConfirmButton)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(NewPriceTextField))))
                                .addContainerGap())))))
        );
        TFIDFPanelLayout.setVerticalGroup(
            TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TFIDFPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFIDFUpdateButton)
                    .addComponent(TFIDFComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFIDFGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TFIDFPanelLayout.createSequentialGroup()
                        .addComponent(CreateOfferLabel)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewPriceLabel)
                            .addComponent(NewPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(TFIDFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewPriceLabel1)
                            .addComponent(QuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(ConfirmButton)
                        .addContainerGap())))
        );

        AdminPanel.addTab("Analyze an user", TFIDFPanel);

        OptionPanel.setBackground(new java.awt.Color(153, 255, 153));

        ConfirmNewUserButton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ConfirmNewUserButton.setText("Confirm");
        ConfirmNewUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmNewUserButtonActionPerformed(evt);
            }
        });

        OutputMessageLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        OutputMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        UsernameLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        UsernameLabel.setText("Username");

        PasswordLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        PasswordLabel.setText("Password");

        ConfirmPasswordLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ConfirmPasswordLabel.setText("Confirm Password");

        DeleteUserButton.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        DeleteUserButton.setForeground(new java.awt.Color(255, 0, 0));
        DeleteUserButton.setText("DELETE MY USER");
        DeleteUserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DeleteUserButtonMousePressed(evt);
            }
        });
        DeleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OptionPanelLayout = new javax.swing.GroupLayout(OptionPanel);
        OptionPanel.setLayout(OptionPanelLayout);
        OptionPanelLayout.setHorizontalGroup(
            OptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(OptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UsernameTextField)
                    .addComponent(ConfirmPasswordTextField)
                    .addComponent(PasswordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addGap(364, 364, 364)
                .addComponent(UsernameLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(PasswordLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(ConfirmPasswordLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(ConfirmNewUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(386, 386, 386))
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(DeleteUserButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OutputMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        OptionPanelLayout.setVerticalGroup(
            OptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OptionPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(UsernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(PasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(ConfirmPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConfirmPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(ConfirmNewUserButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(OutputMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(DeleteUserButton)
                .addGap(106, 106, 106))
        );

        AdminPanel.addTab("New User (Admin only)", OptionPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 799, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AdminPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KMeansPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_KMeansPanelFocusGained

    }//GEN-LAST:event_KMeansPanelFocusGained

    private void TFIDFUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFIDFUpdateButtonActionPerformed
        Guest user=null;
        for(User us:this.users)
        {
            if(us.getUserLoginName().equals(TFIDFComboBox.getSelectedItem()))
            {
                user = new Guest(us.getUserLoginName(), us.getUserHash());
                break;
            }
        }
        if(user!=null)
        {
            this.updateProductAnalyzeUserList();
            
            ArrayList<Product> products = FileManager.readPurchasedFile(user);
            Adapter forTFIDF = new Adapter(products);
            Map<String, Long> data = forTFIDF.adaptTFIDFOutput();

            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            ComboBoxModel model = AdminCategoryComboBoxPanel1.getModel();

            for(int i=0; i<model.getSize(); i++)
            {
                Long key = data.get(model.getElementAt(i).toString().toLowerCase());
                if(key!=null)
                    dataset.addValue(key, "# of purchases", (String)model.getElementAt(i));
            }
            
            Long key = data.get("others");
            if(key!=null)
                dataset.addValue(key, "# of purchases", "Others");
            JFreeChart chart = ChartFactory.createBarChart("Purchases per category", "Category", "#Of Purchases", dataset, PlotOrientation.VERTICAL, false, false, false);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.black);
            p.setBackgroundPaint(Color.yellow);
            
            final NumberAxis rangeAxis = (NumberAxis) p.getRangeAxis();
            rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
            
            final BarRenderer renderer = (BarRenderer) p.getRenderer();
            renderer.setDrawBarOutline(false);

            final GradientPaint gp0 = new GradientPaint(0.0f, 0.0f, Color.red, 0.0f, 0.0f, Color.red);
            renderer.setSeriesPaint(0, gp0);
            
            ChartPanel panel = new ChartPanel(chart);
            panel.setVisible(true);
            panel.setSize(TFIDFGraphPanel.getWidth()-1, TFIDFGraphPanel.getHeight()-1);
            TFIDFGraphPanel.removeAll();
            TFIDFGraphPanel.add(panel);
            TFIDFPanel.updateUI();
        }
    }//GEN-LAST:event_TFIDFUpdateButtonActionPerformed

    private void TFIDFPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFIDFPanelFocusGained

    }//GEN-LAST:event_TFIDFPanelFocusGained

    private void TFIDFPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TFIDFPanelMouseClicked

    }//GEN-LAST:event_TFIDFPanelMouseClicked

    private void AdminPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminPanelMouseClicked
        if(AdminPanel.getSelectedIndex()==2)
        {
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();

            JFreeChart chart = ChartFactory.createBarChart("Purchases per category", "Category", "#Of Purchases", dataset, PlotOrientation.VERTICAL, false, false, false);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.black);
            p.setBackgroundPaint(Color.yellow);
            
            final NumberAxis rangeAxis = (NumberAxis) p.getRangeAxis();
            rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
            
            ChartPanel panel = new ChartPanel(chart);
            panel.setVisible(true);
            panel.setSize(TFIDFGraphPanel.getWidth()-1, TFIDFGraphPanel.getHeight()-1);
            TFIDFGraphPanel.add(panel);
            TFIDFPanel.updateUI();
        }
        if(AdminPanel.getSelectedIndex()==1)
        {
            XYSeriesCollection dataset = new XYSeriesCollection();
            XYSeries serie1 = new XYSeries("Group #1");
            XYSeries serie2 = new XYSeries("Group #2");
            
            Mediator mediator = new Mediator(2, this.users);
            ArrayList<ArrayList<double[]>> clusteredvalues = new ArrayList<>();
            try {
                clusteredvalues = mediator.mediateKMeans();
            }catch (Exception e){}
            
            if(clusteredvalues.size()>0)
                for(int i=0; i<clusteredvalues.get(0).size(); i++)
                {
                    serie1.add(clusteredvalues.get(0).get(i)[0] ,clusteredvalues.get(0).get(i)[1]);
                }
            if(clusteredvalues.size()>1)
                for(int i=0; i<clusteredvalues.get(1).size(); i++)
                {
                    serie2.add(clusteredvalues.get(1).get(i)[0],clusteredvalues.get(1).get(i)[1]);
                }
            dataset.addSeries(serie1);
            dataset.addSeries(serie2);
            
            JFreeChart chart = ChartFactory.createXYLineChart("Users trend", "Number of purchases", "Value Spent (€)", dataset, PlotOrientation.VERTICAL, true, false, false);
            XYPlot p = chart.getXYPlot();
            p.setRangeGridlinePaint(Color.darkGray);
            p.setBackgroundPaint(Color.lightGray);
            
            XYLineAndShapeRenderer xyrenderer = new XYLineAndShapeRenderer();
            xyrenderer.setSeriesPaint(0, Color.red);
            xyrenderer.setSeriesPaint(1, Color.blue);
            
            p.setRenderer(xyrenderer);
            
            NumberAxis numberAxis = (NumberAxis) p.getDomainAxis();
            numberAxis.setTickUnit(new NumberTickUnit(1));

            
            ChartPanel panel = new ChartPanel(chart);
            panel.setVisible(true);
            panel.setSize(KMeansGraphPanel.getWidth()-1, KMeansGraphPanel.getHeight()-1);
            KMeansGraphPanel.add(panel);
            KMeansPanel.updateUI();
        }
    }//GEN-LAST:event_AdminPanelMouseClicked

    private void AddProductPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AddProductPanelFocusGained
        this.updateAdminListPanel1();
    }//GEN-LAST:event_AddProductPanelFocusGained

    private void AdminCheckBoxPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminCheckBoxPanel1ActionPerformed
        if(AdminCheckBoxPanel1.isSelected()==true)
        {
            int[] indices = AdminListPanel1.getSelectedIndices();
            NewItemAdminPanel1Field1.setEnabled(false);
            if(indices.length>0)
            {
                NewItemAdminPanel1Field1.setText(this.products.get(indices[0]).getID());
                NewItemAdminPanel1Field2.setText(this.products.get(indices[0]).getName());
                NewItemAdminPanel1Field3.setText(this.products.get(indices[0]).getDescription());
                NewItemAdminPanel1Field4.setText(String.valueOf(this.products.get(indices[0]).getStock()));
                NewItemAdminPanel1Field5.setText(String.valueOf(this.products.get(indices[0]).getCost()));
                AdminCategoryComboBoxPanel1.setSelectedItem(this.products.get(indices[0]).getCategory());
            }
        }
        else
        {
            NewItemAdminPanel1Field1.setEnabled(true);
            NewItemAdminPanel1Field1.setText("");
            NewItemAdminPanel1Field2.setText("");
            NewItemAdminPanel1Field3.setText("");
            NewItemAdminPanel1Field4.setText("");
            NewItemAdminPanel1Field5.setText("");
            AdminCategoryComboBoxPanel1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_AdminCheckBoxPanel1ActionPerformed

    private void AdminCategoryComboBoxPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminCategoryComboBoxPanel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdminCategoryComboBoxPanel1ActionPerformed

    private void AdminSAVECHANGESButtonPanel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminSAVECHANGESButtonPanel2ActionPerformed
        FileManager.writeProductFile(this.products);
    }//GEN-LAST:event_AdminSAVECHANGESButtonPanel2ActionPerformed

    private void ConfirmButtonAdminPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonAdminPanel1ActionPerformed
        String ID="";
        String name;
        String description;
        String category;
        int count;
        double cost;
        if(NewItemAdminPanel1Field1.getText().isEmpty()&&AdminCheckBoxPanel1.isSelected()==false)
        JOptionPane.showMessageDialog(AddProductPanel, "ID field is empty");
        else if(NewItemAdminPanel1Field2.getText().isEmpty())
        JOptionPane.showMessageDialog(AddProductPanel, "Name field is empty");
        else if(NewItemAdminPanel1Field3.getText().isEmpty())
        JOptionPane.showMessageDialog(AddProductPanel, "Description field is empty");
        else if(NewItemAdminPanel1Field4.getText().isEmpty())
        JOptionPane.showMessageDialog(AddProductPanel, "Count field is empty");
        else if(NewItemAdminPanel1Field5.getText().isEmpty())
        JOptionPane.showMessageDialog(AddProductPanel, "Cost field is empty");
        else
        {
            String string = NewItemAdminPanel1Field4.getText();
            String parsedstring = "";
            char[] numbers = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
            for(int i=0; i<string.length(); i++)
            {
                for(char c:numbers)
                if(string.charAt(i)==c)
                parsedstring = parsedstring.concat(Character.toString(c));
            }
            if(parsedstring.length()<=0)
            {
                NewItemAdminPanel1Field4.setText("");
                JOptionPane.showMessageDialog(AddProductPanel, "Count field must contain numbers");
            }
            else
            {
                count = Integer.parseInt(parsedstring);
                string = NewItemAdminPanel1Field5.getText();
                parsedstring = "";
                char[] doublenumbers = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'};
                for(int i=0; i<string.length(); i++)
                {
                    for(char c:doublenumbers)
                    if(string.charAt(i)==c)
                    parsedstring = parsedstring.concat(Character.toString(c));
                    if(string.charAt(i)==',')
                    parsedstring = parsedstring.concat(Character.toString('.'));
                }
                if(parsedstring.length()<=0)
                {
                    NewItemAdminPanel1Field4.setText("");
                    JOptionPane.showMessageDialog(AddProductPanel, "Cost field must contain decimals");
                }
                else
                {
                    cost = Double.parseDouble(parsedstring);
                    boolean add=true;
                    if(AdminCheckBoxPanel1.isSelected()==true)
                    {
                        int[] indices = AdminListPanel1.getSelectedIndices();
                        if(indices.length!=1)
                        {
                            add=false;
                            JOptionPane.showMessageDialog(AddProductPanel, "Please select only one item to replace");
                        }
                        else
                        ID=this.products.get(indices[0]).getID();
                    }
                    else
                    {
                        ID = NewItemAdminPanel1Field1.getText();
                    }
                    if(add==true)
                    {
                        name = NewItemAdminPanel1Field2.getText();
                        description = NewItemAdminPanel1Field3.getText();
                        category = AdminCategoryComboBoxPanel1.getItemAt(AdminCategoryComboBoxPanel1.getSelectedIndex());
                        int i;
                        for(i=0; i<this.products.size(); i++)
                        {
                            if(this.products.get(i).getID().equals(ID))
                            break;
                        }
                        if(i<products.size())
                        {
                            this.products.get(i).setName(name);
                            this.products.get(i).setDescription(description);
                            this.products.get(i).setCategory(category);
                            this.products.get(i).setCost(cost);
                            this.products.get(i).setStock(count);
                        }
                        else
                        this.products.add(new Product(ID, name, description, count, cost, category));
                        this.updateAdminListPanel1();
                    }
                }
            }
        }
    }//GEN-LAST:event_ConfirmButtonAdminPanel1ActionPerformed

    private void DecreaseButtonAdminPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecreaseButtonAdminPanel1ActionPerformed
        int val=0;
        String string = CountTextBoxAdminPanel1.getText();
        String parsedstring = "";
        char[] numbers = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
        for(int i=0; i<string.length(); i++)
        {
            for(char c:numbers)
            if(string.charAt(i)==c)
            parsedstring = parsedstring.concat(Character.toString(c));
        }
        if(parsedstring.length()>0)
        val=Integer.parseInt(parsedstring);
        int[] indices = AdminListPanel1.getSelectedIndices();
        for(int index:indices)
        {
            int prevstock=products.get(index).getStock();
            if(prevstock-val>=0)
            this.products.get(index).setStock(prevstock-val);
            else
            this.products.get(index).setStock(0);
        }
        this.updateAdminListPanel1();
    }//GEN-LAST:event_DecreaseButtonAdminPanel1ActionPerformed

    private void IncreaseButtonAdminPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncreaseButtonAdminPanel1ActionPerformed
        int val=0;
        String string = CountTextBoxAdminPanel1.getText();
        String parsedstring = "";
        char[] numbers = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
        for(int i=0; i<string.length(); i++)
        {
            for(char c:numbers)
            if(string.charAt(i)==c)
            parsedstring = parsedstring.concat(Character.toString(c));
        }
        if(parsedstring.length()>0)
        val=Integer.parseInt(parsedstring);
        int[] indices = AdminListPanel1.getSelectedIndices();
        for(int index:indices)
        {
            int prevstock=products.get(index).getStock();
            this.products.get(index).setStock(val+prevstock);
        }
        this.updateAdminListPanel1();
    }//GEN-LAST:event_IncreaseButtonAdminPanel1ActionPerformed

    private void CountTextBoxAdminPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountTextBoxAdminPanel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CountTextBoxAdminPanel1ActionPerformed

    private void AdminRemoveSelectedButtonPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminRemoveSelectedButtonPanel1ActionPerformed
        int[] indices = AdminListPanel1.getSelectedIndices();
        if(indices.length>0)
        {
            int option = JOptionPane.showConfirmDialog(AddProductPanel, "Do you really want to delete all the selected items?");
            if(option == JOptionPane.YES_OPTION)
            {

                for(int i = indices.length-1; i>=0; i--)
                {
                    this.products.remove(indices[i]);
                }
                this.updateAdminListPanel1();
            }
        }
    }//GEN-LAST:event_AdminRemoveSelectedButtonPanel1ActionPerformed

    private void AdminListPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminListPanel1MouseClicked
        int[] indices = AdminListPanel1.getSelectedIndices();
        if(indices.length!=1)
        AdminTextAreaPanel1.setText("");
        else
        AdminTextAreaPanel1.setText(this.products.get(indices[0]).getDescription());

        AdminCheckBoxPanel1.setSelected(false);
        NewItemAdminPanel1Field1.setEnabled(true);
        NewItemAdminPanel1Field1.setText("");
        NewItemAdminPanel1Field2.setText("");
        NewItemAdminPanel1Field3.setText("");
        NewItemAdminPanel1Field4.setText("");
        NewItemAdminPanel1Field5.setText("");
        AdminCategoryComboBoxPanel1.setSelectedIndex(0);

    }//GEN-LAST:event_AdminListPanel1MouseClicked

    private void DeleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUserButtonActionPerformed
        int i;
        for(i=0; i<this.users.size(); i++)
        if(this.user.getUserLoginName().equals(this.users.get(i).getUserLoginName()))
        break;
        
        OutputMessageLabel.setForeground(Color.green);
        OutputMessageLabel.setText("User deleted, exiting...");
        users.remove(i);
        FileManager.writeUserFile(this.users);
        
        try{Thread.sleep(3000);}catch(InterruptedException e){}
        System.exit(0);
    }//GEN-LAST:event_DeleteUserButtonActionPerformed

    private void ConfirmNewUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmNewUserButtonActionPerformed
        if(UsernameTextField.getText().isEmpty()||PasswordTextField.getText().isEmpty()||ConfirmPasswordTextField.getText().isEmpty())
        {
            OutputMessageLabel.setForeground(Color.red);
            OutputMessageLabel.setText("All fields must be compiled");
        }
        else if(PasswordTextField.getText().equals(ConfirmPasswordTextField.getText()))
        {
            boolean found=false;
            for(User user:this.users)
            {
                if(user.getUserLoginName().equals(UsernameTextField.getText().toLowerCase()))
                {
                    found=true;
                    break;
                }
            }
            if("admin".equals(UsernameTextField.getText().toLowerCase()))
            found=true;
            if(found)
            {
                OutputMessageLabel.setForeground(Color.red);
                OutputMessageLabel.setText("User name is already in use");
            }
            else
            {
                this.users.add(new Admin(UsernameTextField.getText(), FileManager.hash(PasswordTextField.getText())));
                FileManager.writeUserFile(this.users);
                OutputMessageLabel.setForeground(Color.green);
                OutputMessageLabel.setText("User created");
                UsernameTextField.setText("");
                PasswordTextField.setText("");
                ConfirmPasswordTextField.setText("");
            }
        }
        else
        {
            OutputMessageLabel.setForeground(Color.red);
            OutputMessageLabel.setText("Password mismatch");
        }
    }//GEN-LAST:event_ConfirmNewUserButtonActionPerformed

    private void DeleteUserButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteUserButtonMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteUserButtonMousePressed

    private void ProductAnalyzeUserListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductAnalyzeUserListMouseClicked
        int index = ProductAnalyzeUserList.getSelectedIndex();
        if(index>=0)
        {
            NewPriceTextField.setEnabled(true);
            QuantityTextField.setEnabled(true);
            ConfirmButton.setEnabled(true);
        }
        else
        {
            NewPriceTextField.setEnabled(false);
            QuantityTextField.setEnabled(false);
            ConfirmButton.setEnabled(false);
            
            NewPriceTextField.setText("");
            QuantityTextField.setText("");
        }
    }//GEN-LAST:event_ProductAnalyzeUserListMouseClicked

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
        int index = ProductAnalyzeUserList.getSelectedIndex();
        Guest user=null;
        for(User usr:this.users)
            if(usr.getUserLoginName().equals(TFIDFComboBox.getSelectedItem().toString().toLowerCase()))
            {
                user = new Guest(usr.getUserLoginName(), usr.getUserHash());
                break;
            }
        if(user!=null)
        {
            char[] numbers = {'0' ,'1', '2', '3', '4', '5', '6', '7', '8', '9'};
            String newprice=NewPriceTextField.getText();
            String quantity=QuantityTextField.getText();
            String parsedstring="";
            for(int i=0; i<quantity.length(); i++)
            {
                for(char c:numbers)
                if(quantity.charAt(i)==c)
                parsedstring = parsedstring.concat(Character.toString(c));
            }
            quantity=new String(parsedstring);
            parsedstring = "";
            char[] doublenumbers = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'};
            for(int i=0; i<newprice.length(); i++)
            {
                for(char c:doublenumbers)
                if(newprice.charAt(i)==c)
                parsedstring = parsedstring.concat(Character.toString(c));
                if(newprice.charAt(i)==',')
                parsedstring = parsedstring.concat(Character.toString('.'));
            }
            newprice=new String(parsedstring);
            if("".equals(newprice)||"".equals(quantity))
            {
                JOptionPane.showConfirmDialog(null, "Fields can not be empty", "Empty field error", JOptionPane.OK_CANCEL_OPTION);
            }
            if(Double.parseDouble(newprice)>=this.products.get(index).getCost())
            {
                JOptionPane.showConfirmDialog(null, "New price is higher than the original one...", "Offer not an offer", JOptionPane.OK_CANCEL_OPTION);
            }
            else if(Integer.parseInt(quantity)<=0)
            {
                JOptionPane.showConfirmDialog(null, "There must be at least one item to sell (quantity>0)", "Quantity error", JOptionPane.OK_CANCEL_OPTION);
            }
            else
            {
                
                int stock = Integer.parseInt(quantity);
                int prodstock = this.products.get(index).getStock();
                if(prodstock>=stock)
                {
                    String ID = this.products.get(index).getID();
                    String name = this.products.get(index).getName();
                    String description = this.products.get(index).getDescription();
                    String category = this.products.get(index).getCategory();
                    double cost = Double.parseDouble(newprice);
                    this.products.get(index).setStock(prodstock-stock);
                    
                    FileManager.writeProductFile(this.products);
                    ArrayList<Product> offers = FileManager.readOffersFile(user);
                    offers.add(new Product(ID, name, description, stock, cost, category));
                    FileManager.writeOffersFile(offers, user);
                    this.updateAdminListPanel1();
                    this.updateProductAnalyzeUserList();
                    
                    NewPriceTextField.setText("");
                    QuantityTextField.setText("");
                }
                else
                {
                    JOptionPane.showConfirmDialog(null, "Quantity is higher than the aviable quantity of the chosen item", "Quantity error", JOptionPane.OK_CANCEL_OPTION);
                }
            }
        }
    }//GEN-LAST:event_ConfirmButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddItemLabelAdminPanel1;
    private javax.swing.JLabel AddItemLabelAdminPanel2;
    private javax.swing.JPanel AddProductPanel;
    private javax.swing.JComboBox<String> AdminCategoryComboBoxPanel1;
    private javax.swing.JCheckBox AdminCheckBoxPanel1;
    private javax.swing.JList<String> AdminListPanel1;
    private javax.swing.JTabbedPane AdminPanel;
    private javax.swing.JButton AdminRemoveSelectedButtonPanel1;
    private javax.swing.JButton AdminSAVECHANGESButtonPanel2;
    private javax.swing.JTextArea AdminTextAreaPanel1;
    private javax.swing.JLabel ChangeCountLabelAdminPanel1;
    private javax.swing.JButton ConfirmButton;
    private javax.swing.JButton ConfirmButtonAdminPanel1;
    private javax.swing.JButton ConfirmNewUserButton;
    private javax.swing.JLabel ConfirmPasswordLabel;
    private javax.swing.JTextField ConfirmPasswordTextField;
    private javax.swing.JLabel CostLabelAdminPanel1;
    private javax.swing.JLabel CostLabelAdminPanel2;
    private javax.swing.JLabel CountLabelAdminPanel1;
    private javax.swing.JTextField CountTextBoxAdminPanel1;
    private javax.swing.JLabel CreateOfferLabel;
    private javax.swing.JButton DecreaseButtonAdminPanel1;
    private javax.swing.JButton DeleteUserButton;
    private javax.swing.JLabel DescriptionLabelAdminPanel1;
    private javax.swing.JLabel IDLabelAdminPanel1;
    private javax.swing.JButton IncreaseButtonAdminPanel1;
    private javax.swing.JPanel KMeansGraphPanel;
    private javax.swing.JPanel KMeansPanel;
    private javax.swing.JLabel NameLabelAdminPanel1;
    private javax.swing.JTextField NewItemAdminPanel1Field1;
    private javax.swing.JTextField NewItemAdminPanel1Field2;
    private javax.swing.JTextField NewItemAdminPanel1Field3;
    private javax.swing.JTextField NewItemAdminPanel1Field4;
    private javax.swing.JTextField NewItemAdminPanel1Field5;
    private javax.swing.JLabel NewPriceLabel;
    private javax.swing.JLabel NewPriceLabel1;
    private javax.swing.JTextField NewPriceTextField;
    private javax.swing.JPanel OptionPanel;
    private javax.swing.JLabel OutputMessageLabel;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JTextField PasswordTextField;
    private javax.swing.JList<String> ProductAnalyzeUserList;
    private javax.swing.JTextField QuantityTextField;
    private javax.swing.JComboBox<String> TFIDFComboBox;
    private javax.swing.JPanel TFIDFGraphPanel;
    private javax.swing.JPanel TFIDFPanel;
    private javax.swing.JButton TFIDFUpdateButton;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
